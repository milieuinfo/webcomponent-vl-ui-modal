import{VlElement,define}from"/node_modules/vl-ui-core/vl-core.js";import"/node_modules/vl-ui-icon/vl-icon.js";import"/node_modules/vl-ui-button/vl-button.js";import"/node_modules/vl-ui-action-group/vl-action-group.js";export class VlModal extends(VlElement(HTMLElement)){static get _observedAttributes(){return["id","data-title","closable","not-cancellable","open"]}constructor(){super('\n      <style>\n        @import \'/node_modules/vl-ui-modal/style.css\';\n        @import \'/node_modules/vl-ui-icon/style.css\';\n        @import \'/node_modules/vl-ui-link/style.css\';\n        @import \'/node_modules/vl-ui-action-group/style.css\';\n        @import \'/node_modules/vl-ui-button/style.css\';\n      </style>\n\n      <div class="vl-modal">\n        <dialog \n          class="vl-modal-dialog" \n          data-vl-modal \n          tabindex="-1" \n          role="dialog" \n          aria-modal="true" \n          aria-hidden="true"\n          aria-labelledby="modal-toggle-title"\n          aria-describedby="modal-toggle-description">\n          <div class="vl-modal-dialog__content" id="modal-toggle-description">\n            <slot name="content">Modal content</slot>\n          </div>\n          <div is="vl-action-group" id="modal-action-group">\n            <slot name="button" data-vl-modal-close></slot>\n            <button is="vl-button-link" id="modal-toggle-cancellable" data-vl-modal-close>\n              <span is="vl-icon" icon="cross" before></span>Annuleer\n            </button>\n          </div>\n        </dialog>\n      </div>')}connectedCallback(){this.dress()}get _dialogElement(){return this._element.querySelector("dialog")}get _titleElement(){return this._element.querySelector("#modal-toggle-title")}get _actionGroupElement(){return this._element.querySelector("#modal-action-group")}get _cancelElement(){return this._element.querySelector("#modal-toggle-cancellable")}get _dressed(){return!!this.getAttribute("data-vl-modal-dressed")}dress(){this._dressed||vl.modal.dress(this._dialogElement)}open(){vl.modal.lastClickedToggle=this._dialogElement,this._dialogElement.hasAttribute("open")||(console.log("open toggling ..."),vl.modal.toggle(this._dialogElement))}close(){this._dialogElement.hasAttribute("open")&&(console.log("close toggling ..."),vl.modal.toggle(this._dialogElement))}on(e,l){this._dialogElement.addEventListener(e,l)}_getCloseButtonTemplate(){return this._template('\n      <button type="button" class="vl-modal-dialog__close" data-vl-modal-close>\n        <i class="vl-modal-dialog__close__icon vl-vi vl-vi-cross" aria-hidden="true"></i>\n        <span class="vl-u-visually-hidden">Venster sluiten</span>\n      </button>\n    ')}_getTitleTemplate(e){return this._template(`\n      <h2 class="vl-modal-dialog__title" id="modal-toggle-title">${e}</h2>\n    `)}_getCancelTemplate(){return this._template('\n      <button is="vl-button-link" data-vl-modal-close id="modal-toggle-cancellable">\n        <span is="vl-icon" icon="cross" before data-vl-modal-close></span>Annuleer\n      </button>\n    ')}_idChangedCallback(e,l){this._dialogElement.id=l}_data_titleChangedCallback(e,l){l?this._titleElement?this._titleElement.innerText=l:this._dialogElement.prepend(this._getTitleTemplate(l)):this._titleElement&&this._titleElement.remove()}_not_cancellableChangedCallback(e,l){void 0!==l||this._cancelElement?void 0!==l&&this._cancelElement&&this._cancelElement.remove():this._actionGroupElement.append(this._getCancelTemplate())}_openChangedCallback(e,l){this._dialogElement.setAttribute("open",l)}_closableChangedCallback(e,l){void 0!==l?(this._closeButtonElement=this._getCloseButtonTemplate(),this._dialogElement.setAttribute("data-vl-modal-closable",""),this._dialogElement.appendChild(this._closeButtonElement)):this._closeButtonElement&&(this._closeButtonElement.remove(),this._dialogElement.removeAttribute("data-vl-modal-closable"))}};(()=>{const e=(e,l)=>{if(document.head.querySelector("#"+e))return console.log(`script with id '${e}' is already loaded`),Promise.resolve();let t=document.createElement("script");t.id=e,t.src=l,t.async=!1;const o=new Promise((e,l)=>{t.onload=(()=>{e()})});return document.head.appendChild(t),o};Promise.all([e("util","/node_modules/@govflanders/vl-ui-util/dist/js/util.min.js"),e("core","/node_modules/@govflanders/vl-ui-core/dist/js/core.min.js"),e("modal","/node_modules/vl-ui-modal/dist/modal.js"),(e=>new Promise((l,t)=>{(async()=>{for(;!e();)await new Promise(e=>setTimeout(e,50));l()})()}))(()=>window.vl&&window.vl.modal)]).then(()=>{define("vl-modal",VlModal)})})();