(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("vue-focus-lock", [], factory);
	else if(typeof exports === 'object')
		exports["vue-focus-lock"] = factory();
	else
		root["vue-focus-lock"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 6);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return toArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return arrayFind; });
var toArray = function toArray(a) {
  var ret = Array(a.length);
  for (var i = 0; i < a.length; ++i) {
    ret[i] = a[i];
  }
  return ret;
};

var arrayFind = function arrayFind(array, search) {
  return array.filter(function (a) {
    return a === search;
  })[0];
};

/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FOCUS_GROUP", function() { return FOCUS_GROUP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FOCUS_DISABLED", function() { return FOCUS_DISABLED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FOCUS_ALLOW", function() { return FOCUS_ALLOW; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FOCUS_AUTO", function() { return FOCUS_AUTO; });
var FOCUS_GROUP = 'data-focus-lock';
var FOCUS_DISABLED = 'data-focus-lock-disabled';
var FOCUS_ALLOW = 'data-no-focus-lock';
var FOCUS_AUTO = 'data-autofocus-inside';

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__array__ = __webpack_require__(0);



var filterNested = function filterNested(nodes) {
  var l = nodes.length;
  var i = void 0;
  var j = void 0;
  for (i = 0; i < l; i += 1) {
    for (j = 0; j < l; j += 1) {
      if (i !== j) {
        if (nodes[i].contains(nodes[j])) {
          return filterNested(nodes.filter(function (x) {
            return x !== nodes[j];
          }));
        }
      }
    }
  }
  return nodes;
};

var getTopParent = function getTopParent(node) {
  return node.parentNode ? getTopParent(node.parentNode) : node;
};

var getAllAffectedNodes = function getAllAffectedNodes(node) {
  var group = node.getAttribute(__WEBPACK_IMPORTED_MODULE_0__constants__["FOCUS_GROUP"]);
  if (group) {
    return filterNested(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__array__["a" /* toArray */])(getTopParent(node).querySelectorAll('[' + __WEBPACK_IMPORTED_MODULE_0__constants__["FOCUS_GROUP"] + '="' + group + '"]:not([' + __WEBPACK_IMPORTED_MODULE_0__constants__["FOCUS_DISABLED"] + '="disabled"])')));
  }
  return [node];
};

/* harmony default export */ __webpack_exports__["a"] = (getAllAffectedNodes);

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export newFocus */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_DOMutils__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_firstFocus__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_all_affected__ = __webpack_require__(2);




var findAutoFocused = function findAutoFocused(autoFocusables) {
  return function (node) {
    return !!node.autofocus || node.dataset && !!node.dataset.autofocus || autoFocusables.indexOf(node) >= 0;
  };
};

var newFocus = function newFocus(innerNodes, outerNodes, activeElement, lastNode, autoFocused) {
  var cnt = innerNodes.length;
  var firstFocus = innerNodes[0];
  var lastFocus = innerNodes[cnt - 1];

  // focus is inside
  if (innerNodes.indexOf(activeElement) >= 0) {
    return undefined;
  }

  var activeIndex = outerNodes.indexOf(activeElement);
  var lastIndex = outerNodes.indexOf(lastNode || activeIndex);
  var lastNodeInside = innerNodes.indexOf(lastNode);
  var indexDiff = activeIndex - lastIndex;
  var firstNodeIndex = outerNodes.indexOf(firstFocus);
  var lastNodeIndex = outerNodes.indexOf(lastFocus);

  // new focus
  if (activeIndex === -1 || lastNodeInside === -1) {
    return innerNodes.indexOf(autoFocused.length ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utils_firstFocus__["a" /* default */])(autoFocused) : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utils_firstFocus__["a" /* default */])(innerNodes));
  }
  // old focus
  if (!indexDiff && lastNodeInside >= 0) {
    return lastNodeInside;
  }
  // jump out
  if (indexDiff && Math.abs(indexDiff) > 1) {
    return lastNodeInside;
  }
  // focus above lock
  if (activeIndex <= firstNodeIndex) {
    return cnt - 1;
  }
  // focus below lock
  if (activeIndex > lastNodeIndex) {
    return 0;
  }
  // index is inside tab order, but outside Lock
  if (indexDiff) {
    if (Math.abs(indexDiff) > 1) {
      return lastNodeInside;
    }
    return (cnt + lastNodeInside + indexDiff) % cnt;
  }
  // do nothing
  return undefined;
};

var getTopCommonParent = function getTopCommonParent(activeElement, entry, entries) {
  var topCommon = entry;
  entries.forEach(function (subEntry) {
    var common = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utils_DOMutils__["a" /* getCommonParent */])(activeElement, subEntry);
    if (common) {
      if (common.contains(topCommon)) {
        topCommon = common;
      } else {
        topCommon = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utils_DOMutils__["a" /* getCommonParent */])(common, topCommon);
      }
    }
  });
  return topCommon;
};

var allParentAutofocusables = function allParentAutofocusables(entries) {
  return entries.reduce(function (acc, node) {
    return acc.concat(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utils_DOMutils__["b" /* parentAutofocusables */])(node));
  }, []);
};

var notAGuard = function notAGuard(node) {
  return !(node.dataset && node.dataset.focusGuard);
};

var getFocusMerge = function getFocusMerge(topNode, lastNode) {
  var activeElement = document && document.activeElement;
  var entries = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_all_affected__["a" /* default */])(topNode).filter(notAGuard);

  var commonParent = getTopCommonParent(activeElement || topNode, topNode, entries);

  var innerElements = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utils_DOMutils__["c" /* getTabbableNodes */])(entries).filter(function (_ref) {
    var node = _ref.node;
    return notAGuard(node);
  });

  if (!innerElements[0]) {
    innerElements = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utils_DOMutils__["d" /* getAllTabbableNodes */])(entries).filter(function (_ref2) {
      var node = _ref2.node;
      return notAGuard(node);
    });
    if (!innerElements[0]) {
      return undefined;
    }
  }

  var innerNodes = innerElements.map(function (_ref3) {
    var node = _ref3.node;
    return node;
  });

  var outerNodes = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utils_DOMutils__["c" /* getTabbableNodes */])([commonParent]).map(function (_ref4) {
    var node = _ref4.node;
    return node;
  });

  var newId = newFocus(innerNodes, outerNodes, activeElement, lastNode, innerNodes.filter(findAutoFocused(allParentAutofocusables(entries))));

  if (newId === undefined) {
    return newId;
  }
  return innerElements[newId];
};

/* harmony default export */ __webpack_exports__["a"] = (getFocusMerge);

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(17)(
  /* script */
  __webpack_require__(5),
  /* template */
  __webpack_require__(18),
  /* scopeId */
  null,
  /* cssModules */
  null
)
Component.options.__file = "/Users/akorzunov/dev/Z/mellis/github/focus/vue-focus-lock/src/Lock.vue"
if (Component.esModule && Object.keys(Component.esModule).some(function (key) {return key !== "default" && key !== "__esModule"})) {console.error("named exports are not supported in *.vue files.")}
if (Component.options.functional) {console.error("[vue-loader] Lock.vue: functional components are not supported with templates, they should use render functions.")}

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0d4029e0", Component.options)
  } else {
    hotAPI.reload("data-v-0d4029e0", Component.options)
  }
})()}

module.exports = Component.exports


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _focusLock = __webpack_require__(9);

var _focusLock2 = _interopRequireDefault(_focusLock);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function deferAction(action) {
  var setImmediate = window.setImmediate;
  if (typeof setImmediate !== 'undefined') {
    setImmediate(action);
  } else {
    setTimeout(action, 1);
  }
} //
//
//
//
//
//
//
//
//
//
//
//
//

var lastActiveTrap = 0;
var lastActiveFocus = null;

var focusOnBody = function focusOnBody() {
  return document && document.activeElement === document.body;
};

var isFreeFocus = function isFreeFocus() {
  return focusOnBody() || (0, _focusLock.focusIsHidden)();
};

var activateTrap = function activateTrap() {
  var result = false;
  if (lastActiveTrap) {
    var _lastActiveTrap = lastActiveTrap,
        observed = _lastActiveTrap.observed,
        onActivation = _lastActiveTrap.onActivation;

    if (!isFreeFocus() || !lastActiveFocus) {
      if (observed && !(0, _focusLock.focusInside)(observed)) {
        onActivation();
        result = (0, _focusLock2.default)(observed, lastActiveFocus);
      }
      lastActiveFocus = document && document.activeElement;
    }
  }
  return result;
};

var reducePropsToState = function reducePropsToState(propsList) {
  return propsList.filter(function (_ref) {
    var disabled = _ref.disabled;
    return !disabled;
  }).slice(-1)[0];
};

var handleStateChangeOnClient = function handleStateChangeOnClient(trap) {
  if (lastActiveTrap !== trap) {
    lastActiveTrap = null;
  }
  lastActiveTrap = trap;
  if (trap) {
    activateTrap();
    deferAction(activateTrap);
  }
};

var instances = [];

var emitChange = function emitChange() {
  handleStateChangeOnClient(reducePropsToState(instances));
};

var onTrap = function onTrap(event) {
  if (activateTrap() && event) {
    // prevent scroll jump
    event.stopPropagation();
    event.preventDefault();
  }
};

var onBlur = function onBlur() {
  deferAction(activateTrap);
};

var attachHandler = function attachHandler() {
  document.addEventListener('focusin', onTrap, true);
  document.addEventListener('focusout', onBlur);
};

var detachHandler = function detachHandler() {
  document.removeEventListener('focusin', onTrap, true);
  document.removeEventListener('focusout', onBlur);
};

exports.default = {
  name: 'Lock',
  props: {
    returnFocus: {
      type: Boolean
    },
    disabled: {
      type: Boolean
    },
    noFocusGuards: {
      type: Boolean
    }
  },
  data: function data() {
    return {
      data: {},
      hidden: "" //    "width: 1px;height: 0px;padding: 0;overflow: hidden;position: fixed;top: 0;left: 0;"
    };
  },

  computed: {
    guardsEnabled: function guardsEnabled() {
      return !(this.disabled || this.noFocusGuards);
    }
  },
  watch: {
    disabled: function disabled() {
      this.data.disabled = this.disabled;
      emitChange();
    }
  },

  methods: {
    onBlur: function onBlur() {
      deferAction(emitChange);
    }
  },

  mounted: function mounted() {
    var _this = this;

    this.data.vue = this;
    this.data.observed = this.$el.querySelector("[data-lock]");

    this.data.disabled = this.disabled;
    this.data.onActivation = function () {
      _this.originalFocusedElement = _this.originalFocusedElement || document.activeElement;
    };

    if (!instances.length) {
      attachHandler();
    }
    instances.push(this.data);
    emitChange();
  },
  destroyed: function destroyed() {
    var _this2 = this;

    instances = instances.filter(function (_ref2) {
      var vue = _ref2.vue;
      return vue !== _this2;
    });
    if (!instances.length) {
      detachHandler();
    }
    if (this.returnFocus && this.originalFocusedElement && this.originalFocusedElement.focus) {
      this.originalFocusedElement.focus();
    }
    emitChange();
  }
};

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _Lock = __webpack_require__(4);

var _Lock2 = _interopRequireDefault(_Lock);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _Lock2.default;

/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_all_affected__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_array__ = __webpack_require__(0);



var focusInFrame = function focusInFrame(frame) {
  return frame === document.activeElement;
};

var focusInsideIframe = function focusInsideIframe(topNode) {
  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utils_all_affected__["a" /* default */])(topNode).reduce(function (result, node) {
    return result || !!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utils_array__["b" /* arrayFind */])(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utils_array__["a" /* toArray */])(node.querySelectorAll('iframe')), focusInFrame);
  }, false);
};

var focusInside = function focusInside(topNode) {
  var activeElement = document && document.activeElement;

  if (!activeElement || activeElement.dataset && activeElement.dataset.focusGuard) {
    return false;
  }
  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utils_all_affected__["a" /* default */])(topNode).reduce(function (result, node) {
    return result || node.contains(activeElement) || focusInsideIframe(topNode);
  }, false);
};

/* harmony default export */ __webpack_exports__["a"] = (focusInside);

/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_array__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__constants__ = __webpack_require__(1);



var focusIsHidden = function focusIsHidden() {
  return document && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utils_array__["a" /* toArray */])(document.querySelectorAll('[' + __WEBPACK_IMPORTED_MODULE_1__constants__["FOCUS_ALLOW"] + ']')).some(function (node) {
    return node.contains(document.activeElement);
  });
};

/* harmony default export */ __webpack_exports__["a"] = (focusIsHidden);

/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__tabHook__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__focusMerge__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__focusInside__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__focusIsHidden__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__setFocus__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__constants__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__utils_all_affected__ = __webpack_require__(2);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "tabHook", function() { return __WEBPACK_IMPORTED_MODULE_0__tabHook__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "focusInside", function() { return __WEBPACK_IMPORTED_MODULE_2__focusInside__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "focusIsHidden", function() { return __WEBPACK_IMPORTED_MODULE_3__focusIsHidden__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "focusMerge", function() { return __WEBPACK_IMPORTED_MODULE_1__focusMerge__["a"]; });
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "constants", function() { return __WEBPACK_IMPORTED_MODULE_5__constants__; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "getAllAffectedNodes", function() { return __WEBPACK_IMPORTED_MODULE_6__utils_all_affected__["a"]; });










/* harmony default export */ __webpack_exports__["default"] = (__WEBPACK_IMPORTED_MODULE_4__setFocus__["a" /* default */]);

/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export focusOn */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__focusMerge__ = __webpack_require__(3);


var focusOn = function focusOn(target) {
  target.focus();
  if (target.contentWindow) {
    target.contentWindow.focus();
  }
};

var guardCount = 0;
var lockDisabled = false;

/* harmony default export */ __webpack_exports__["a"] = (function (topNode, lastNode) {
  var focusable = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__focusMerge__["a" /* default */])(topNode, lastNode);

  if (lockDisabled) {
    return;
  }

  if (focusable) {
    if (guardCount > 2) {
      if (process.env.NODE_ENV !== 'production') {
        // eslint-disable-next-line no-console
        console.error('FocusLock: focus-fighting detected. Only one focus management system could be active. ' + 'See https://github.com/theKashey/focus-lock/#focus-fighting');
        lockDisabled = true;
        setTimeout(function () {
          lockDisabled = false;
        }, 1);
      }
      return;
    }
    guardCount++;
    focusOn(focusable.node);
    guardCount--;
  }
});

/***/ }),
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = ({
  attach: function attach(node, enabled) {},
  detach: function detach() {}
});

/***/ }),
/* 12 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export isVisible */
/* unused harmony export notHiddenInput */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return getCommonParent; });
/* unused harmony export filterFocusable */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return getTabbableNodes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return getAllTabbableNodes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return parentAutofocusables; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__tabOrder__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tabUtils__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__array__ = __webpack_require__(0);




var isElementHidden = function isElementHidden(computedStyle) {
  if (!computedStyle || !computedStyle.getPropertyValue) {
    return false;
  }
  return computedStyle.getPropertyValue('display') === 'none' || computedStyle.getPropertyValue('visibility') === 'hidden';
};

var isVisible = function isVisible(node) {
  return !node || node === document || !isElementHidden(window.getComputedStyle(node, null)) && isVisible(node.parentNode);
};

var notHiddenInput = function notHiddenInput(node) {
  return !((node.tagName === 'INPUT' || node.tagName === 'BUTTON') && (node.type === 'hidden' || node.disabled));
};

var getParents = function getParents(node) {
  var parents = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

  parents.push(node);
  if (node.parentNode) {
    getParents(node.parentNode, parents);
  }
  return parents;
};

var getCommonParent = function getCommonParent(nodea, nodeb) {
  var parentsA = getParents(nodea);
  var parentsB = getParents(nodeb);

  for (var i = 0; i < parentsA.length; i += 1) {
    var currentParent = parentsA[i];
    if (parentsB.indexOf(currentParent) >= 0) {
      return currentParent;
    }
  }
  return false;
};

var filterFocusable = function filterFocusable(nodes) {
  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__array__["a" /* toArray */])(nodes).filter(function (node) {
    return isVisible(node);
  }).filter(function (node) {
    return notHiddenInput(node);
  });
};

var getTabbableNodes = function getTabbableNodes(topNodes) {
  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__tabOrder__["a" /* orderByTabIndex */])(filterFocusable(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__tabUtils__["a" /* getFocusables */])(topNodes)), true);
};

var getAllTabbableNodes = function getAllTabbableNodes(topNodes) {
  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__tabOrder__["a" /* orderByTabIndex */])(filterFocusable(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__tabUtils__["a" /* getFocusables */])(topNodes)), false);
};

var parentAutofocusables = function parentAutofocusables(topNode) {
  return filterFocusable(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__tabUtils__["b" /* getParentAutofocusables */])(topNode));
};

/***/ }),
/* 13 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var isRadio = function isRadio(node) {
  return node.tagName === 'INPUT' && node.type === 'radio';
};

var findSelectedRadio = function findSelectedRadio(node, nodes) {
  return nodes.filter(isRadio).filter(function (el) {
    return el.name === node.name;
  }).filter(function (el) {
    return el.checked;
  })[0] || node;
};

var pickFirstFocus = function pickFirstFocus(nodes) {
  if (nodes[0] && nodes.length > 1) {
    if (isRadio(nodes[0]) && nodes[0].name) {
      return findSelectedRadio(nodes[0], nodes);
    }
  }
  return nodes[0];
};

/* harmony default export */ __webpack_exports__["a"] = (pickFirstFocus);

/***/ }),
/* 14 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export tabSort */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return orderByTabIndex; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__array__ = __webpack_require__(0);


var tabSort = function tabSort(a, b) {
  var tabDiff = a.tabIndex - b.tabIndex;
  var indexDiff = a.index - b.index;

  if (tabDiff) {
    if (!a.tabIndex) return 1;
    if (!b.tabIndex) return -1;
  }

  return tabDiff || indexDiff;
};

var orderByTabIndex = function orderByTabIndex(nodes, filterNegative) {
  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__array__["a" /* toArray */])(nodes).map(function (node, index) {
    return {
      node: node,
      index: index,
      tabIndex: node.tabIndex
    };
  }).filter(function (data) {
    return !filterNegative || data.tabIndex >= 0;
  }).sort(tabSort);
};

/***/ }),
/* 15 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return getFocusables; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return getParentAutofocusables; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__tabbables__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__array__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(1);




var getFocusables = function getFocusables(parents) {
  return parents.reduce(function (acc, parent) {
    return acc.concat(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__array__["a" /* toArray */])(parent.querySelectorAll(__WEBPACK_IMPORTED_MODULE_0__tabbables__["a" /* default */].join(','))));
  }, []);
};

var getParentAutofocusables = function getParentAutofocusables(parent) {
  var parentFocus = parent.querySelectorAll('[' + __WEBPACK_IMPORTED_MODULE_2__constants__["FOCUS_AUTO"] + ']');
  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__array__["a" /* toArray */])(parentFocus).map(function (node) {
    return getFocusables([node]);
  }).reduce(function (acc, nodes) {
    return acc.concat(nodes);
  }, []);
};

/***/ }),
/* 16 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = (['button:enabled:not([readonly])', 'select:enabled:not([readonly])', 'textarea:enabled:not([readonly])', 'input:enabled:not([readonly])', 'a[href]', 'area[href]', 'iframe', 'object', 'embed', '[tabindex]', '[contenteditable]', '[autofocus]']);

/***/ }),
/* 17 */
/***/ (function(module, exports) {

// this module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle

module.exports = function normalizeComponent (
  rawScriptExports,
  compiledTemplate,
  scopeId,
  cssModules
) {
  var esModule
  var scriptExports = rawScriptExports = rawScriptExports || {}

  // ES6 modules interop
  var type = typeof rawScriptExports.default
  if (type === 'object' || type === 'function') {
    esModule = rawScriptExports
    scriptExports = rawScriptExports.default
  }

  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (compiledTemplate) {
    options.render = compiledTemplate.render
    options.staticRenderFns = compiledTemplate.staticRenderFns
  }

  // scopedId
  if (scopeId) {
    options._scopeId = scopeId
  }

  // inject cssModules
  if (cssModules) {
    var computed = Object.create(options.computed || null)
    Object.keys(cssModules).forEach(function (key) {
      var module = cssModules[key]
      computed[key] = function () { return module }
    })
    options.computed = computed
  }

  return {
    esModule: esModule,
    exports: scriptExports,
    options: options
  }
}


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', [_c('div', {
    style: (_vm.hidden),
    attrs: {
      "tabIndex": _vm.disabled ? -1 : 0
    }
  }), _vm._v(" "), _c('div', {
    style: (_vm.hidden),
    attrs: {
      "tabIndex": _vm.disabled ? -1 : 1
    }
  }), _vm._v(" "), _c('div', {
    attrs: {
      "data-lock": ""
    },
    on: {
      "focusout": _vm.onBlur
    }
  }, [_vm._t("default")], 2), _vm._v(" "), _c('div', {
    style: (_vm.hidden),
    attrs: {
      "tabIndex": _vm.disabled ? -1 : 0
    }
  })])
},staticRenderFns: []}
module.exports.render._withStripped = true
if (false) {
  module.hot.accept()
  if (module.hot.data) {
     require("vue-hot-reload-api").rerender("data-v-0d4029e0", module.exports)
  }
}

/***/ })
/******/ ]);
});